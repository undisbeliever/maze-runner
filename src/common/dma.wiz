
import "../memmap";
import "../../wiz/examples/snes/common/snes/snes";

in code {

const blank_byte : [u8] = [0];


// Clear a given block of vram
// NOTE: Modifies DMA0 (set to double register, no increment, src = blank_byte)
// NOTE: Set force blank
#[mem8, idx16]
func clear_vram(vram_waddr : u16 in xx, size : u16 in yy) {
    push(data_bank);

    push(a = 0x80);
    data_bank = pop();

    // Force blank (just in case)
    snes.ppu.brightness = a = snes.ppu.BRIGHTNESS_FORCE_BLANK | snes.ppu.BRIGHTNESS_MASK;


    snes.ppu.vram_control = a = snes.ppu.VRAM_CONTROL_INCREMENT_1 | snes.ppu.VRAM_CONTROL_REMAP_MODE_0 + snes.ppu.VRAM_CONTROL_SIZE_16;
    snes.ppu.vram_address_hl = xx;

    snes.dma0.control = a = snes.dma.CONTROL_MODE_AB | snes.dma.CONTROL_MDMA_NO_INCREMENT;
    snes.dma0.mdma_dest = a = <:&snes.ppu.vram_write_data_l;
    snes.dma0.src_address_hl = xx = &blank_byte as u16;
    snes.dma0.src_address_bank = a = 0x80;  // ::TODO replace with #:&blank_byte when implemented::
    snes.dma0.mdma_size_hl = yy;

    snes.dma.mdma_enable = a = snes.dma.ENABLE_0;

    data_bank = pop();
}


// Clear a given block of CGRAM
// NOTE: Modifies DMA0 (set to single register, no increment, src = blank_byte)
// NOTE: Disables HDMA, set force blank
#[mem8, idx16]
func clear_cgram(color : u16 in xx, nColors : u16 in yy) {
    push(data_bank);

    push(a = 0x80);
    data_bank = pop();

    // Disable HDMA
    snes.dma.hdma_enable = 0;

    // Force blank (just in case)
    snes.ppu.brightness = a = snes.ppu.BRIGHTNESS_FORCE_BLANK | snes.ppu.BRIGHTNESS_MASK;

    a = x;
    snes.ppu.cgram_address = a;

    snes.dma0.control = a = snes.dma.CONTROL_MODE_AB | snes.dma.CONTROL_MDMA_NO_INCREMENT;
    snes.dma0.mdma_dest = a = <:&snes.ppu.vram_write_data_l;
    snes.dma0.src_address_hl = xx = &blank_byte as u16;
    snes.dma0.src_address_bank = a = 0x80;  // ::TODO replace with #:&blank_byte when implemented::

    mem16();
    #[mem16] {
        aa = yy << 1;
        snes.dma0.mdma_size_hl = aa;
    }
    mem8();

    snes.dma.mdma_enable = a = snes.dma.ENABLE_0;

    data_bank = pop();
}

}
